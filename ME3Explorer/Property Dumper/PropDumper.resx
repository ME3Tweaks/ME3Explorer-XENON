<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>126, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMCgAAAEAGADoFwAAFgAAACgAAAAwAAAAUAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQ0gICAdHR0fHx8eHh4cHBwdHR0eHh4cHBwcHBwd
        HR0bGxsaGhocHBwbGxsYGBgaGhoaGhoXFxcaGhoZGRkXFxcXFxcYGBgWFhYWFhYXFxcWFhYUFBQWFhYW
        FhYTExMWFhYVFRUTExMVFRUVFRUSEhITExMUFBQSEhIJCQkBAQEAAAAAAAAAAAAAAAAAAAAgICBQUFBM
        TExKSkpNTU1LS0tHR0dLS0tJSUlFRUVISEhHR0dCQkJERERFRUVAQEBAQEBCQkI/Pz88PDxAQEA9PT05
        OTk9PT06Ojo3Nzc6Ojo6Ojo1NTU2NjY4ODgzMzMzMzM2NjYzMzMxMTE1NTUyMjIuLi4zMzMxMTEjIyMJ
        CQkAAAAAAAAAAAAAAAAAAAAeHh5OTk5QUFBMTExKSkpOTk5MTExHR0dMTExKSkpERERKSkpISEhCQkJG
        RkZFRUVBQUFCQkJDQ0NAQEA9PT1BQUE/Pz85OTk+Pj48PDw2NjY8PDw6Ojo1NTU5OTk5OTk0NDQ1NTU4
        ODg0NDQxMTE1NTUzMzMvLy81NTUzMzMlJSUGBgYAAAAAAAAAAAAAAAAhISFOTk5OTk5QUFBNTU1MTExP
        T09APT01MC4mIyI/Pj45Nzc1MTA8PDs9PT1APz4uKyg0MjI8PDxBQUA0MC4qJSMlIiE9PT0uKyolIB4f
        HRw2NTUyMTAlIiAwLy4iIScSEi0QDywRECgRESgQDxsPDxoSEiE0NDQwMDA1NTU2NjYmJiYKCgoBAQEA
        AAAAAAAhISFSUlJOTk5PT09RUVFOTk5NTU08NzZpXlkpJSQ7OjlHRENVTUgtKiksKypEQkFKQT0+Ojgf
        HRw+PDtKQTxNR0IdGhk9PDw5MS4xLCkaGRc4NzcwLCxDOzgyMC4RESoAAF8AAFYAAFQAAFUAADQAADAC
        AjM4ODg2NjYzMzM2NjY1NTUlJSUJCQkAAAAAAAAgICBSUlJTU1NPT09QUFBTU1NPT08pJyc0MjAfHRww
        KSgwLCo3MzE1Ly0qJCEyLy1BPz5DQkEeGhkwKSYwKidAOTUqIh4yKykoJSMkIiApIh4vKCYyKic+ODUd
        GhgZGDohIo8kJHsgIH0hIX8TE10BAUUEBDo1NTU6Ojo3NzczMzM5OTk3NzcUFBQAAAAAAAAhISFQUFBU
        VFRUVFRQUFBRUVFTU1NGOTN6YFMkGxiVd2phTURQPjd1Wk9aRz+ScmQ2KyczKCWIaVxdRz0vJB9GNzBF
        Ni9iTkOGZ1kuIx5AMitFNy9IODF/YlNqUD8aGUZIScVISLJBQadLS7JVVY0eHmQEBEE5OTk2NjY6Ojo5
        OTk0NDQ6OjoXFxcAAAAAAAAiIiJWVlZQUFBUVFRVVVVRUVFSUlJXUErNu661n5NlWFKWhHuJfXZlW1Qt
        KSiVgniUgHafiX28oZMnJCI0MC1YT0hgU0t+bGKkinw4LytBOTVjVU1kVk2gh3mKcVwJCTQPD5Q3N6VD
        Q7BHR7FtbbYnJ3kEBEM9PT05OTk4ODg8PDw5OTk1NTUWFhYAAAAAAAAhISFVVVVXV1dSUlJVVVVWVlZS
        UlJXVVP//fy5tbJFRERraGf39/eem5lOTU1HREOTkpKOjYxAPjw8OzthX12CgYBlZGNiYmBEREMlJCOC
        f31ycG5lY2JgYF42NDAcHUY+P71JSr0yMp9MTbhoarsiI3IDA0o8PDw/Pz87Ozs5OTk9PT06OjoVFRUA
        AAAAAAAiIiJTU1NXV1dXV1dTU1NWVlZXV1dCQD+Afn5YVlVOTU1JR0d5eHhbWVhIR0dOTU1pZ2dqaWlL
        S0tMTExVU1NsbGxlYmJjYWBPTUw0MzJjYmNlZGNiX19jYWA/PDgoJzxNS4dKSHoyMVJDQm86OWQWFkUP
        DzM9PT09PT1AQEA8PDw6Ojo+Pj4YGBgAAAAAAAAkJCRYWFhTU1NZWVlYWFhUVFRYWFhRUVFNTExPTk5X
        V1dSUVFKSUlOTU1SUlJNTU1NTExMS0tLS0tSUlJOTU1FRERIR0dKSUlEQ0NGRUVISEdEQ0NBQEBERENC
        QkE7Oj1BQEdAP0U5ODo/PkM8PEA2Njk5OTxDQ0M+Pj4/Pz9BQUE9PT07OzsZGRkAAAAAAAAjIyNZWVlb
        W1tUVFRZWVlaWlpUVFRYWFhZWVlVVVVWVlZZWVlVVVVUVFRXV1dVVVVQUFBUVFRUVFRNTU1SUlJSUlJL
        S0tPT09QUFBLS0tFRUU/Pz9ERERISEhLS0tISEhDQ0NISEhJSUlAQEBFRUVFRUU/Pz9DQ0NFRUU/Pz8/
        Pz9CQkI+Pj4WFhYAAAAAAAAiIiJWVlZaWlpaWlpWVlZZWVlbW1tVVVVZWVlbW1tWVlZXV1daWlpVVVVV
        VVVZWVlWVlZTU1NVVVVVVVVQUFBTU1NUVFRNTU1QUFBSUlIeHh4+Pj44ODhHR0dJSUlNTU1JSUlGRkZJ
        SUlISEhCQkJGRkZHR0dAQEBDQ0NFRUVAQEBBQUFDQ0MaGhoAAAAAAAAkJCRYWFhWVlZcXFxbW1tYWFhb
        W1tbW1tMTEwsLCwkJCQiIiIzMzNPT09WVlY0NDQjIyMpKSkkJCQzMzMpKSlFRUU8PDwlJSUzMzMoKCgI
        CAiUlJQ5OTkeHh4vLy9FRUUxMTEeHh4dHR0wMDAnJyclJSVERERISEhDQ0NFRUVHR0dAQEBBQUEbGxsA
        AAAAAAAkJCRbW1tZWVlXV1ddXV1dXV1XV1ddXV07Ozs/Pz9lZWVmZmZYWFg8PDw1NTVGRkZxcXFqampy
        cnIeHh5fX18/Pz88PDxoaGgcHBxoaGgbGxujo6OLi4uLi4tPT08uLi5fX1+Ojo6SkpJZWVllZWU9PT02
        NjZLS0tISEhDQ0NGRkZHR0dBQUEXFxcAAAAAAAAiIiJXV1dbW1tcXFxYWFhdXV1fX19YWFg3NzdOTk5S
        UlIVFRVVVVVra2sYGBiDg4M8PDxDQ0OPj48hISGCgoJDQ0NTU1OFhYUlJSWNjY0jIyOoqKhQUFBBQUGg
        oKBISEidnZ1FRUUmJiZDQ0OKiopKSko+Pj5ERERKSkpKSkpDQ0NHR0dISEgcHBwAAAAAAAAkJCRZWVlZ
        WVldXV1cXFxaWlpeXl5fX182NjZSUlJWVlY3Nzc5OTlubm4yMjKLi4tJSUlKSkqSkpIiIiKIiIhERERW
        VlaKioonJyeSkpIkJCSjo6NOTk4kJCSZmZl0dHSmpqZ5eXmOjo6qqqqMjIxSUlI+Pj5NTU1ISEhLS0tL
        S0tERERISEgdHR0AAAAAAAAlJSVcXFxaWlpZWVleXl5dXV1aWlphYWE6OjpWVlZbW1tCQkI5OTlhYWFS
        UlKRkZFMTExNTU2ZmZkkJCSYmJg7OzthYWGXl5dFRUWVlZUjIyOrq6tRUVE9PT2jo6NGRkaNjY0qKipr
        a2uXl5eOjo6CgoI1NTVHR0dOTk5JSUlNTU1MTExGRkYaGhoAAAAAAAAiIiJaWlpdXV1bW1taWlpgYGBf
        X19bW1s7OztZWVleXl48PDw7Ozt3d3c4ODiTk5NFRUVHR0eampolJSWkpKSRkZGmpqaCgoKhoaGCgoIW
        Fhazs7OXl5ejo6Nvb28qKipcXFybm5ujo6M6OjqDg4Ovr6+GhoYqKipSUlJPT09HR0dPT09MTEwdHR0A
        AAAAAAAlJSVZWVlbW1teXl5cXFxcXFxgYGBgYGA2NjZcXFxtbW0rKytra2t6eno1NTUaGhpISEhFRUUY
        GBggICALCwsWFhYUFBQuLi4WFhYmJiYzMzMYGBgeHh4WFhYtLS1VVVU4ODgaGhocHBw5OTkjIyMYGBgm
        JiZFRUVMTExRUVFRUVFJSUlOTk4fHx8AAAAAAAAlJSVeXl5ZWVlcXFxfX19dXV1dXV1iYmJCQkI+Pj5e
        Xl5gYGBaWlpDQ0NQUFBfX19jY2NlZWVUVFQ0NDQsLCxCQkJeXl5iYmJfX19cXFxgYGBfX19ZWVlcXFxd
        XV1XV1daWlpbW1tVVVVVVVVJSUk1NTVBQUFWVlZSUlJPT09SUlJRUVFMTEweHh4AAAAAAAAjIyNcXFxf
        X19cXFxdXV1hYWFfX19eXl5bW1tDQ0M5OTk/Pz9HR0dWVlZlZWVmZmZhYWFkZGRISEhWVlZVVVU9PT1h
        YWFeXl5kZGRhYWFdXV1iYmJgYGBaWlpeXl5eXl5ZWVlbW1tdXV1QUFBBQUFhYWE3NzdBQUFXV1dTU1NP
        T09VVVVSUlIfHx8AAAAAAAAlJSVZWVldXV1gYGBdXV1CQkIaGho6OjpgYGBlZWU+Pj4cHBxKSkpnZ2dJ
        SUkjIyMdHR07OztBQUFaWlpXV1cNDQ0ZGRk+Pj5aWlpVVVUuLi4VFRUnJyc0NDQaGho8PDxfX19LS0ss
        LCwXFxcpKSlkZGSOjo4nJydRUVFYWFhVVVVOTk5WVlYhISEAAAAAAAAmJiZfX19ZWVlfX19UVFQ5OTll
        ZWUUFBRhYWFMTEw8PDxlZWUpKSlFRUUxMTFycnJycnJMTEwyMjJeXl6GhoZ7e3uEhIRnZ2c1NTU3Nzd4
        eHiPj494eHgiIiKPj49TU1NKSko7OzuGhoaQkJBPT08gICCGhoZsbGw2NjZVVVVZWVlXV1dQUFAhISEA
        AAAAAAAkJCReXl5gYGBbW1tPT088PDxra2sNDQ1GRkZDQ0NDQ0NqamojIyM1NTVxcXFISEg/Pz9zc3M6
        OjpiYmJ8fHxBQUE7OzuJiYlWVlZwcHBiYmIbGxsiIiIODg6SkpJaWlo6OjpQUFCmpqYnJyc9PT04ODiZ
        mZmXl5c5OTlTU1NXV1daWlpWVlYfHx8AAAAAAAAlJSVbW1tgYGBhYWFOTk48PDxxcXFPT09NTU0xMTFB
        QUFwcHAcHBxGRkaEhIQeHh4/Pz9kZGRdXV1nZ2dlZWVAQEBDQ0N1dXWAgICHh4eDg4Nubm5vb28sLCyV
        lZVdXV08PDxVVVWrq6sTExNJSUlbW1uhoaGQkJBfX19JSUlZWVlVVVVbW1sjIyMAAAAAAAAnJydgYGBa
        WlpiYmJTU1NAQEB3d3c2NjZaWlpjY2NPT098fHwwMDBFRUWJiYkrKytDQ0NwcHBZWVlsbGxvb283Nzc7
        Ozt/f391dXV8fHxdXV00NDSLi4tERESXl5dkZGQ5OTlYWFitra0UFBRERER8fHx6enpvb2+Dg4NFRUVd
        XV1ZWVlXV1ckJCQAAAAAAAAmJiZgYGBiYmJcXFxTU1NERER+fn4LCwtERER6enpdXV2SkpJlZWUoKChj
        Y2Nvb29bW1uCgoIuLi5ubm6enp5fX19cXFyZmZlRUVFbW1t/f39NTU2FhYUpKSmampqgoKBRUVFfX1+2
        trZJSUlTU1OgoKAtLS0zMzOcnJxMTExUVFRgYGBaWlohISEAAAAAAAAkJCRdXV1iYmJiYmJQUFBFRUWE
        hIQXFxdMTEx/f39LS0tbW1taWlo5OTkvLy9gYGBlZWVGRkZMTExRUVFgYGBiYmJtbW1ZWVlKSkpBQUFd
        XV1tbW1QUFAeHh5fX19iYmJdXV17e3u9vb1ycnJoaGhpaWlDQ0NFRUVnZ2dCQkJRUVFeXl5gYGAlJSUA
        AAAAAAAnJydgYGBeXl5kZGRWVlZERESDg4NsbGx0dHRWVlY+Pj5HR0dJSUlSUlJcXFxHR0dISEhYWFhn
        Z2dZWVlQUFBKSkpERERaWlpmZmZlZWVUVFRISEhVVVVbW1tHR0dMTExGRkZNTU2ZmZkiIiJNTU1ISEhc
        XFxfX19JSUlMTExiYmJeXl5dXV0mJiYAAAAAAAAoKChkZGRiYmJfX19jY2NGRkYlJSUfHx8qKio5OTld
        XV1ra2toaGhpaWlubm5ra2tqampwcHBvb29paWlycnJxcXFqampycnJxcXFra2twcHBxcXFsbGxsbGxw
        cHBsbGxnZ2daWlo/Pz9KSkpsbGxqamphYWFqampnZ2dgYGBkZGRkZGReXl4jIyMAAAAAAAAlJSVgYGBk
        ZGRkZGRhYWFmZmZoaGhhYWFoaGhqampkZGRqampsbGxoaGhra2tvb29sbGxra2twcHBwcHBsbGxycnJ0
        dHRra2tycnJzc3NsbGxxcXFzc3NtbW1vb29xcXFsbGxqampvb29sbGxnZ2dsbGxsbGxiYmJoaGhpaWlg
        YGBkZGRmZmYnJycAAAAAAAAYGBg3Nzc7Ozs8PDw6Ojo6Ojo+Pj49PT07Ozs/Pz8/Pz87OztBQUFBQUE8
        PDxCQkJCQkI+Pj5CQkJDQ0NBQUFCQkJFRUVERERBQUFFRUVFRUU/Pz9EREREREQ+Pj5DQ0NDQ0M+Pj5B
        QUFCQkI+Pj4+Pj5BQUE+Pj47Ozs/Pz8+Pj43Nzc9PT0XFxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEA
        AQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEAAQEA
        AQEAAQEAAQEAAQEAAQEAAQEAAAAAAAAAAAAAAAAFBSoFRnUAbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4A
        bH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4A
        bH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AZ3gAMTsAAQIAAAAAAAAAAAAFBSoFRnYA
        bH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4A
        bH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AbH4AZXUA
        OEIAAgIAAAAAAAAAAAAAAAACAhACGy4AKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEA
        KjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEAKjEA
        KjEAKjEAKjEAKjEAKjEAKjEAKjEAIykABggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAIAAAAAADwAAgAAAAAAPAACAAAAAAAcAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAP///////wAAwAAAAAAHAACAAAAAAAMAAIAA
        AAAABwAAgAAAAAAPAAD///////8AAA==
</value>
  </data>
</root>