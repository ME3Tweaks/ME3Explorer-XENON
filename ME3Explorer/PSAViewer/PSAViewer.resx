<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMCgAAAEAGADoFwAAFgAAACgAAAAwAAAAUAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQ0gICAdHR0fHx8eHh4cHBwdHR0eHh4cHBwcHBwd
        HR0bGxsaGhocHBwbGxsYGBgaGhoaGhoXFxcaGhoZGRkXFxcXFxcYGBgWFhYWFhYXFxcWFhYUFBQWFhYW
        FhYTExMWFhYVFRUTExMVFRUVFRUSEhITExMUFBQSEhIJCQkBAQEAAAAAAAAAAAAAAAAAAAAgICBQUFBM
        TExKSkpNTU1LS0tHR0dLS0tJSUlFRUVISEhHR0dCQkJERERFRUVAQEBAQEBCQkI/Pz88PDxAQEA9PT05
        OTk9PT06Ojo3Nzc6Ojo6Ojo1NTU2NjY4ODgzMzMzMzM2NjYzMzMxMTE1NTUyMjIuLi4zMzMxMTEjIyMJ
        CQkAAAAAAAAAAAAAAAAAAAAeHh5OTk5QUFBMTExKSkpOTk5MTExHR0dMTExKSkpERERKSkpISEhCQkJG
        RkZFRUVBQUFCQkJDQ0NAQEA9PT1BQUE/Pz85OTk+Pj48PDw2NjY8PDw6Ojo1NTU5OTk5OTk0NDQ1NTU4
        ODg0NDQxMTE1NTUzMzMvLy81NTUzMzMlJSUGBgYAAAAAAAAAAAAAAAAhISFOTk5OTk5QUFBNTU1MTExP
        T09APT01MC4mIyI/Pj45Nzc1MTA8PDs9PT1APz4uKyg0MjI8PDxBQUA0MC4qJSMlIiE9PT0uKyolIB4f
        HRw2NTUyMTAlIiAwLy4iIScSEi0QDywRECgRESgQDxsPDxoSEiE0NDQwMDA1NTU2NjYmJiYKCgoBAQEA
        AAAAAAAhISFSUlJOTk5PT09RUVFOTk5NTU08NzZpXlkpJSQ7OjlHRENVTUgtKiksKypEQkFKQT0+Ojgf
        HRw+PDtKQTxNR0IdGhk9PDw5MS4xLCkaGRc4NzcwLCxDOzgyMC4RESoAAF8AAFYAAFQAAFUAADQAADAC
        AjM4ODg2NjYzMzM2NjY1NTUlJSUJCQkAAAAAAAAgICBSUlJTU1NPT09QUFBTU1NPT08pJyc0MjAfHRww
        KSgwLCo3MzE1Ly0qJCEyLy1BPz5DQkEeGhkwKSYwKidAOTUqIh4yKykoJSMkIiApIh4vKCYyKic+ODUd
        GhgZGDohIo8kJHsgIH0hIX8TE10BAUUEBDo1NTU6Ojo3NzczMzM5OTk3NzcUFBQAAAAAAAAhISFQUFBU
        VFRUVFRQUFBRUVFTU1NGOTN6YFMkGxiVd2phTURQPjd1Wk9aRz+ScmQ2KyczKCWIaVxdRz0vJB9GNzBF
        Ni9iTkOGZ1kuIx5AMitFNy9IODF/YlNqUD8aGUZIScVISLJBQadLS7JVVY0eHmQEBEE5OTk2NjY6Ojo5
        OTk0NDQ6OjoXFxcAAAAAAAAiIiJWVlZQUFBUVFRVVVVRUVFSUlJXUErNu661n5NlWFKWhHuJfXZlW1Qt
        KSiVgniUgHafiX28oZMnJCI0MC1YT0hgU0t+bGKkinw4LytBOTVjVU1kVk2gh3mKcVwJCTQPD5Q3N6VD
        Q7BHR7FtbbYnJ3kEBEM9PT05OTk4ODg8PDw5OTk1NTUWFhYAAAAAAAAhISFVVVVXV1dSUlJVVVVWVlZS
        UlJXVVP//fy5tbJFRERraGf39/eem5lOTU1HREOTkpKOjYxAPjw8OzthX12CgYBlZGNiYmBEREMlJCOC
        f31ycG5lY2JgYF42NDAcHUY+P71JSr0yMp9MTbhoarsiI3IDA0o8PDw/Pz87Ozs5OTk9PT06OjoVFRUA
        AAAAAAAiIiJTU1NXV1dXV1dTU1NWVlZXV1dCQD+Afn5YVlVOTU1JR0d5eHhbWVhIR0dOTU1pZ2dqaWlL
        S0tMTExVU1NsbGxlYmJjYWBPTUw0MzJjYmNlZGNiX19jYWA/PDgoJzxNS4dKSHoyMVJDQm86OWQWFkUP
        DzM9PT09PT1AQEA8PDw6Ojo+Pj4YGBgAAAAAAAAkJCRYWFhTU1NZWVlYWFhUVFRYWFhRUVFNTExPTk5X
        V1dSUVFKSUlOTU1SUlJNTU1NTExMS0tLS0tSUlJOTU1FRERIR0dKSUlEQ0NGRUVISEdEQ0NBQEBERENC
        QkE7Oj1BQEdAP0U5ODo/PkM8PEA2Njk5OTxDQ0M+Pj4/Pz9BQUE9PT07OzsZGRkAAAAAAAAjIyNZWVlb
        W1tUVFRZWVlaWlpUVFRYWFhZWVlVVVVQUFBLS0tKSkpRUVFPT09FRUVGRkZGRkZDQ0NDQ0NPT09MTEw9
        PT1HR0dEREQ/Pz9JSUlMTEw+Pj49PT1JSUlBQUE3Nzc6Ojo9PT03Nzc6OjpCQkI/Pz9DQ0NFRUU/Pz8/
        Pz9CQkI+Pj4WFhYAAAAAAAAiIiJWVlZaWlpaWlpWVlZZWVlbW1tVVVVZWVlbW1swMDA3NzcxMTE8PDwy
        MjIxMTEdHR00NDQ8PDw6OjovLy8+Pj5AQEAYGBgrKys2NjY+Pj4/Pz8+Pj4wMDA4ODg3NzdISEhJSUlI
        SEgeHh4/Pz86OjpGRkZAQEBDQ0NFRUVAQEBBQUFDQ0MaGhoAAAAAAAAkJCRYWFhWVlZcXFxbW1tYWFhb
        W1tbW1tYWFhYWFgfHx98fHxWVlYuLi5CQkJzc3M0NDRtbW1EREQ2NjYbGxtWVlaYmJgpKSlqamqCgoI1
        NTUwMDCUlJR3d3ciIiJ8fHxycnJNTU1JSUknJyeTk5M/Pz9DQ0NISEhDQ0NFRUVHR0dAQEBBQUEbGxsA
        AAAAAAAkJCRbW1tZWVlXV1ddXV1dXV1XV1ddXV1dXV1HR0c8PDx9fX1lZWU8PDxJSUmAgIBYWFiTk5OD
        g4N3d3csLCxra2uNjY1sbGyLi4udnZ0pKSlCQkKdnZ2MjIwfHx+xsbGkpKSXl5eZmZlYWFiZmZlDQ0M+
        Pj5LS0tISEhDQ0NGRkZHR0dBQUEXFxcAAAAAAAAiIiJXV1dbW1tcXFxYWFhdXV1fX19YWFhdXV0yMjJm
        ZmZeXl5kZGRCQkJISEh/f38/Pz9eXl4ZGRmQkJBFRUWEhIRYWFijo6N9fX19fX1cXFx+fn5kZGR2dnZg
        YGCcnJxFRUUdHR2goKBQUFCdnZ1ISEhCQkJERERKSkpKSkpDQ0NHR0dISEgcHBwAAAAAAAAkJCRZWVlZ
        WVldXV1cXFxaWlpeXl5fX19WVlYxMTF9fX0sLCxMTExfX19LS0uDg4MoKChzc3N5eXlnZ2dBQUGAgIAq
        KiqmpqZlZWVXV1eOjo6cnJxISEhhYWGRkZFcXFyAgIB8fHyIiIgpKSm1tbV+fn4oKChNTU1ISEhLS0tL
        S0tERERISEgdHR0AAAAAAAAlJSVcXFxaWlpZWVleXl5dXV1aWlphYWFLS0tMTEyBgYEUFBRFRUV5eXk4
        ODhhYWEhISE+Pj5GRkYtLS0rKys/Pz8vLy9KSkpCQkI+Pj5JSUlEREQ2NjZERERLS0slJSVKSkpNTU03
        NzcfHx9OTk5NTU0iIiJQUFBOTk5JSUlNTU1MTExGRkYaGhoAAAAAAAAiIiJaWlpdXV1bW1taWlpgYGBf
        X19bW1s9PT1bW1toaGg5OTlGRkZ7e3tgYGB5eXkoKChRUVFPT09TU1NNTU1SUlJXV1dLS0tVVVVVVVVG
        RkZLS0tUVFRPT09KSkpPT09GRkZERERMTExISEhBQUFGRkZJSUlLS0tSUlJPT09HR0dPT09MTEwdHR0A
        AAAAAAAlJSVZWVlbW1teXl5cXFxcXFxgYGBgYGBKSkohISEvLy9bW1tBQUEPDw8hISEfHx9LS0teXl5f
        X19fX19TU1NMTExPT09SUlJWVlZZWVlPT09FRUVWVlZcXFxVVVVYWFhTU1NERERKSkpXV1dTU1NRUVFV
        VVVSUlJMTExRUVFRUVFJSUlOTk4fHx8AAAAAAAAlJSVeXl5ZWVlcXFxfX19dXV1dXV1iYmJhYWFfX19k
        ZGRVVVUgICAzMzMpKSlfX19jY2NlZWVfX19ISEhAQEA9PT0/Pz9BQUE/Pz8xMTE+Pj49PT03NzdcXFxd
        XV1PT089PT1LS0syMjJQUFBYWFhUVFRSUlJWVlZSUlJPT09SUlJRUVFMTEweHh4AAAAAAAAjIyNcXFxf
        X19cXFxdXV1hYWFfX19eXl5kZGRiYmJgYGBRUVEwMDBycnIiIiJmZmZhYWFkZGRmZmYpKSl5eXl4eHh3
        d3eIiIhdXV0qKipra2uQkJA/Pz9SUlJeXl5OTk5TU1Ovr686OjpSUlJXV1daWlpVVVVRUVFXV1dTU1NP
        T09VVVVSUlIfHx8AAAAAAAAlJSVZWVldXV1gYGBdXV1eXl5jY2NgYGBgYGBlZWVkZGRLS0sxMTF1dXUh
        ISFoaGhnZ2diYmJnZ2ctLS0xMTEzMzM7OztSUlKUlJRERERFRUWlpaVcXFwxMTE5OTlBQUF/f3+fn582
        NjZdXV1YWFhYWFhbW1tVVVVTU1NYWFhVVVVOTk5WVlYhISEAAAAAAAAmJiZfX19ZWVlfX19hYWFdXV1g
        YGBkZGRhYWFhYWFmZmZSUlIyMjJ5eXkgICBNTU1ZWVljY2NiYmJmZmZiYmJjY2NfX18tLS2jo6NEREQS
        EhKenp6cnJx8fHx+fn6JiYmzs7NwcHBEREReXl5fX19YWFhZWVlcXFxXV1dVVVVZWVlXV1dQUFAhISEA
        AAAAAAAkJCReXl5gYGBbW1tfX19jY2NfX19hYWFlZWViYmJiYmJSUlI0NDSAgIBISEg8PDxBQUFBQUFT
        U1NkZGRiYmJRUVFAQEBfX1+goKBJSUkzMzN1dXWurq6Dg4Nubm6dnZ2zs7NMTExUVFRbW1teXl5fX19Z
        WVlaWlpdXV1YWFhXV1daWlpWVlYfHx8AAAAAAAAlJSVbW1tgYGBhYWFeXl5hYWFkZGRhYWFjY2NnZ2dk
        ZGRNTU02NjaHh4dzc3NycnKCgoJtbW0vLy9eXl4/Pz9PT09+fn6ioqJwcHBNTU1ZWVk/Pz+srKxCQkIR
        ERGKioqenp5LS0tcXFxjY2NcXFxeXl5hYWFaWlpaWlpeXl5ZWVlVVVVbW1sjIyMAAAAAAAAnJydgYGBa
        WlpiYmJjY2NeXl5jY2NmZmZiYmJjY2NoaGhSUlI4ODiIiIgxMTE6OjpHR0eKiopoaGg4ODhSUlKdnZ2U
        lJRNTU1DQ0NeXl5qamo6Ojqfn59xcXEXFxezs7N4eHhDQ0NdXV1mZmZjY2NcXFxhYWFhYWFbW1tcXFxf
        X19ZWVlXV1ckJCQAAAAAAAAmJiZgYGBiYmJcXFxjY2NlZWVfX19lZWVnZ2diYmJlZWVUVFQ6OjqLi4sm
        JiZqamo/Pz9ra2uWlpYrKyuZmZlzc3M2NjZbW1tubm5oaGhqampRUVFxcXGbm5thYWG3t7djY2NQUFBo
        aGheXl5lZWVlZWVdXV1iYmJjY2NcXFxdXV1gYGBaWlohISEAAAAAAAAkJCRdXV1iYmJiYmJfX19jY2Nm
        ZmZhYWFlZWVpaWlkZGRRUVE7OzuOjo4nJydXV1c/Pz91dXWXl5cyMjKhoaFRUVFKSkpMTExPT09nZ2dp
        aWlYWFhQUFCtra2SkpKoqKhHR0ddXV1paWlnZ2dhYWFlZWVnZ2dfX19iYmJjY2NdXV1eXl5gYGAlJSUA
        AAAAAAAnJydgYGBeXl5kZGRkZGRhYWFmZmZmZmZjY2NnZ2dqampRUVE9PT2VlZVRUVFWVlZwcHCenp5h
        YWFHR0d8fHyMjIxjY2NkZGRdXV1WVlZtbW1hYWFPT0+jo6O7u7uNjY0/Pz9paWllZWVra2toaGhiYmJn
        Z2dnZ2dhYWFiYmJlZWVeXl5dXV0mJiYAAAAAAAAoKChkZGRiYmJfX19lZWVlZWVfX19oaGhoaGhjY2No
        aGhZWVlCQkKTk5OYmJibm5uXl5dgYGA3NzdZWVlDQ0N8fHyioqKlpaV3d3dMTExsbGxvb29LS0uBgYHB
        wcFgYGBRUVFubm5ra2tkZGRsbGxqamphYWFqampnZ2dgYGBkZGRkZGReXl4jIyMAAAAAAAAlJSVgYGBk
        ZGRkZGRhYWFmZmZoaGhhYWFoaGhqampkZGRkZGQ9PT0hISEWFhYYGBglJSVISEhsbGxwcHBgYGA+Pj4i
        IiIhISE/Pz9oaGhsbGxxcXFfX18sLCwXFxdISEhsbGxqampvb29sbGxnZ2dsbGxsbGxiYmJoaGhpaWlg
        YGBkZGRmZmYnJycAAAAAAAAYGBg3Nzc7Ozs8PDw6Ojo6Ojo+Pj49PT07Ozs/Pz8/Pz87OztBQUFBQUE8
        PDxCQkJCQkI+Pj5CQkJDQ0NBQUFCQkJFRUVERERBQUFFRUVFRUU/Pz9EREREREQ+Pj5DQ0NDQ0M+Pj5B
        QUFCQkI+Pj4+Pj5BQUE+Pj47Ozs/Pz8+Pj43Nzc9PT0XFxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQAB
        AQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQABAQAB
        AQABAQABAQABAQABAQABAQAAAAAAAAAAAAAAAAAFBSo5Sy9XdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlX
        dQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlX
        dQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlTbwkoNgUBAgAAAAAAAAAAAAAFBSo5Sy9X
        dQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlX
        dQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlXdQlRbAkt
        PAYCAgAAAAAAAAAAAAAAAAACAhAWHhMiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQi
        LgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQiLgQi
        LgQiLgQiLgQiLgQiLgQiLgQiLgQdJgMGCAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAIAAAAAADwAAgAAAAAAPAACAAAAAAAcAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAP///////wAAwAAAAAAHAACAAAAAAAMAAIAA
        AAAABwAAgAAAAAAPAAD///////8AAA==
</value>
  </data>
</root>