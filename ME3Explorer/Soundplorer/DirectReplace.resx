<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMCgAAAEAGADoFwAAFgAAACgAAAAwAAAAUAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQ0gICAdHR0fHx8eHh4cHBwdHR0eHh4cHBwcHBwd
        HR0bGxsaGhocHBwbGxsYGBgaGhoaGhoXFxcaGhoZGRkXFxcXFxcYGBgWFhYWFhYXFxcWFhYUFBQWFhYW
        FhYTExMWFhYVFRUTExMVFRUVFRUSEhITExMUFBQSEhIJCQkBAQEAAAAAAAAAAAAAAAAAAAAgICBQUFBM
        TExKSkpNTU1LS0tHR0dLS0tJSUlFRUVISEhHR0dCQkJERERFRUVAQEBAQEBCQkI/Pz88PDxAQEA9PT05
        OTk9PT06Ojo3Nzc6Ojo6Ojo1NTU2NjY4ODgzMzMzMzM2NjYzMzMxMTE1NTUyMjIuLi4zMzMxMTEjIyMJ
        CQkAAAAAAAAAAAAAAAAAAAAeHh5OTk5QUFBMTExKSkpOTk5MTExHR0dMTExKSkpERERKSkpISEhCQkJG
        RkZFRUVBQUFCQkJDQ0NAQEA9PT1BQUE/Pz85OTk+Pj48PDw2NjY8PDw6Ojo1NTU5OTk5OTk0NDQ1NTU4
        ODg0NDQxMTE1NTUzMzMvLy81NTUzMzMlJSUGBgYAAAAAAAAAAAAAAAAhISFOTk5OTk5QUFBNTU1MTExP
        T09APT01MC4mIyI/Pj45Nzc1MTA8PDs9PT1APz4uKyg0MjI8PDxBQUA0MC4qJSMlIiE9PT0uKyolIB4f
        HRw2NTUyMTAlIiAwLy4iIScSEi0QDywRECgRESgQDxsPDxoSEiE0NDQwMDA1NTU2NjYmJiYKCgoBAQEA
        AAAAAAAhISFSUlJOTk5PT09RUVFOTk5NTU08NzZpXlkpJSQ7OjlHRENVTUgtKiksKypEQkFKQT0+Ojgf
        HRw+PDtKQTxNR0IdGhk9PDw5MS4xLCkaGRc4NzcwLCxDOzgyMC4RESoAAF8AAFYAAFQAAFUAADQAADAC
        AjM4ODg2NjYzMzM2NjY1NTUlJSUJCQkAAAAAAAAgICBSUlJTU1NPT09QUFBTU1NPT08pJyc0MjAfHRww
        KSgwLCo3MzE1Ly0qJCEyLy1BPz5DQkEeGhkwKSYwKidAOTUqIh4yKykoJSMkIiApIh4vKCYyKic+ODUd
        GhgZGDohIo8kJHsgIH0hIX8TE10BAUUEBDo1NTU6Ojo3NzczMzM5OTk3NzcUFBQAAAAAAAAhISFQUFBU
        VFRUVFRQUFBRUVFTU1NGOTN6YFMkGxiVd2phTURQPjd1Wk9aRz+ScmQ2KyczKCWIaVxdRz0vJB9GNzBF
        Ni9iTkOGZ1kuIx5AMitFNy9IODF/YlNqUD8aGUZIScVISLJBQadLS7JVVY0eHmQEBEE5OTk2NjY6Ojo5
        OTk0NDQ6OjoXFxcAAAAAAAAiIiJWVlZQUFBUVFRVVVVRUVFSUlJXUErNu661n5NlWFKWhHuJfXZlW1Qt
        KSiVgniUgHafiX28oZMnJCI0MC1YT0hgU0t+bGKkinw4LytBOTVjVU1kVk2gh3mKcVwJCTQPD5Q3N6VD
        Q7BHR7FtbbYnJ3kEBEM9PT05OTk4ODg8PDw5OTk1NTUWFhYAAAAAAAAhISFVVVVXV1dSUlJVVVVWVlZS
        UlJXVVP//fy5tbJFRERraGf39/eem5lOTU1HREOTkpKOjYxAPjw8OzthX12CgYBlZGNiYmBEREMlJCOC
        f31ycG5lY2JgYF42NDAcHUY+P71JSr0yMp9MTbhoarsiI3IDA0o8PDw/Pz87Ozs5OTk9PT06OjoVFRUA
        AAAAAAAiIiJTU1NXV1dXV1dTU1NWVlZXV1dCQD+Afn5YVlVOTU1JR0d5eHhbWVhIR0dOTU1pZ2dqaWlL
        S0tMTExVU1NsbGxlYmJjYWBPTUw0MzJjYmNlZGNiX19jYWA/PDgoJzxNS4dKSHoyMVJDQm86OWQWFkUP
        DzM9PT09PT1AQEA8PDw6Ojo+Pj4YGBgAAAAAAAAkJCRYWFhTU1NZWVlYWFhUVFRYWFhRUVFNTExPTk5X
        V1dSUVFKSUlOTU1SUlJNTU09PDwUFBMiIiJSUlJOTU1FRERIR0dKSUlEQ0NGRUVISEdEQ0NBQEBERENC
        QkE7Oj1BQEdAP0U5ODo/PkM8PEA2Njk5OTxDQ0M+Pj4/Pz9BQUE9PT07OzsZGRkAAAAAAAAjIyNZWVlb
        W1tUVFRZWVlaWlpUVFRYWFhVVVVGRkZFRUVHR0dERERISEhTU1NJSUkmJiZVVVVMTEwwMDBGRkZPT09D
        Q0NCQkJHR0c+Pj49PT1DQ0NDQ0M8PDxBQUFHR0c7Ozs7Ozs6Ojo4ODg7Ozs7Ozs9PT1DQ0NFRUU/Pz8/
        Pz9CQkI+Pj4WFhYAAAAAAAAiIiJWVlZaWlpaWlpWVlZZWVlbW1tVVVU9PT0nJyczMzM0NDQ2NjY4ODg4
        ODg9PT0jIyNXV1dra2s9PT05OTk8PDwyMjI4ODgeHh47OztFRUU/Pz8gICAzMzM1NTU5OTk9PT1JSUlK
        Sko7Ozs6OjooKCg9PT1AQEBDQ0NFRUVAQEBBQUFDQ0MaGhoAAAAAAAAkJCRYWFhWVlZcXFxbW1tYWFhb
        W1tbW1s1NTVMTExjY2M0NDQ+Pj5paWlDQ0N1dXUwMDBaWlp/f39JSUl4eHg6OjpERESEhIQxMTF8fHxa
        WlqEhIQ3NzdtbW1paWkyMjKGhoZdXV1JSUlCQkKDg4NJSUk7OztISEhDQ0NFRUVHR0dAQEBBQUEbGxsA
        AAAAAAAkJCRbW1tZWVlXV1ddXV1dXV1XV1ddXV04ODhQUFBVVVUBAQEQEBBOTk5/f39jY2MVFRVfX19p
        aWknJydZWVljY2NVVVWVlZVqampdXV0wMDBxcXFmZmZvb29zc3NQUFCysrKdnZ2Xl5eSkpKLi4tKSko2
        NjZLS0tISEhDQ0NGRkZHR0dBQUEXFxcAAAAAAAAiIiJXV1dbW1tcXFxYWFhdXV1fX19YWFg3NzdVVVWE
        hIR1dXVKSkpCQkKGhoZkZGQXFxdkZGRpaWkvLy9eXl5paWlaWlqamppsbGxgYGAqKip0dHRpaWlxcXF1
        dXUsLCyKioofHx9WVlaioqKNjY1oaGg6OjpBQUFKSkpKSkpDQ0NHR0dISEgcHBwAAAAAAAAkJCRZWVlZ
        WVldXV1cXFxaWlpeXl5fX182NjZZWVleXl4UFBQkJCR1dXVRUVGFhYUxMTFoaGiQkJBWVlaIiIhGRkZV
        VVWQkJA0NDSEhIRYWFiSkpJBQUFzc3OhoaFlZWV1dXVpaWmSkpJjY2OJiYmmpqZbW1syMjJISEhLS0tL
        S0tERERISEgdHR0AAAAAAAAlJSVcXFxaWlpZWVleXl5dXV1aWlphYWE6OjpcXFxgYGAUFBQgICBEREQ7
        OztHR0czMzMzMzNISEhHR0dCQkI0NDRbW1uTk5MWFhZCQkJKSkpGRkYmJiY1NTVMTExDQ0MyMjJNTU1N
        TU0pKSk/Pz9NTU1LS0s2NjZOTk5JSUlNTU1MTExGRkYaGhoAAAAAAAAiIiJaWlpdXV1bW1taWlpgYGBf
        X19bW1s7OztdXV2SkpKCgoJmZmY7OztXV1dWVlZRUVFPT09SUlJMTExMTExKSkpPT0+Tk5MjIyNRUVFE
        RERPT09TU1NGRkZKSkpKSkpJSUlFRUVJSUlMTExDQ0NFRUVISEhISEhSUlJPT09HR0dPT09MTEwdHR0A
        AAAAAAAlJSVZWVlbW1teXl5XV1dPT09OTk5OTk4/Pz8fHx8VFRUUFBQaGhpCQkJJSUlTU1NcXFxdXV1f
        X19iYmJaWlpPT08pKSkLCws4ODhPT09UVFRJSUlLS0tRUVFTU1NQUFBJSUlGRkZUVFRWVlZKSkpCQkJG
        RkZJSUlAQEBFRUVPT09JSUlOTk4fHx8AAAAAAAAlJSVeXl5ZWVlSUlIzMzMtLS0oKCgqKiowMDBAQEBg
        YGBRUVE2NjY2NjYxMTE2NjY7OztKSkpcXFxbW1tEREQ7Ozs6Ojo9PT08PDw/Pz8pKSkgICBBQUEwMDBS
        UlInJydHR0cpKSlISEhCQkJCQkJKSkpKSkpFRUVLS0sqKipHR0dRUVFMTEweHh4AAAAAAAAjIyNcXFxf
        X19GRkYjIyNPT09LS0tPT09XV1c4ODhGRkYwMDBPT09nZ2deXl5oaGhgYGAyMjJSUlJHR0dWVlaEhISA
        gIB6enp9fX2NjY0lJSUiIiKfn59DQ0NOTk4sLCynp6dGRkZCQkI8PDyQkJCampqNjY2Xl5etra1KSko/
        Pz9VVVVSUlIfHx8AAAAAAAAlJSVZWVldXV1TU1MiIiIhISEuLi4wMDBFRUViYmIsLCxLS0tsbGw9PT00
        NDQ4ODhubm5nZ2c9PT0vLy+Dg4NlZWU1NTU5OTl9fX2cnJwoKCgkJCSoqKhHR0dKSkotLS2srKxHR0cl
        JSWCgoKZmZlNTU06OjpsbGzAwMBMTExFRUVOTk5WVlYhISEAAAAAAAAmJiZfX19ZWVlfX19dXV1ZWVlg
        YGBMTEw3Nzd4eHgbGxtxcXFYWFhCQkJoaGhLS0s9PT2Pj48kJCQgICCbm5tBQUFUVFRSUlJGRkampqYq
        KiolJSWurq5JSUlTU1MtLS2wsLBJSUkGBga2trZubm42NjZYWFgvLy+6urpNTU1ISEhXV1dQUFAhISEA
        AAAAAAAkJCReXl5gYGBbW1tfX19aWlpCQkI2NjZZWVlxcXEjIyN6enpYWFg/Pz9oaGhVVVVBQUGXl5cj
        IyMiIiKgoKBFRUVSUlJQUFBISEiqqqoqKiomJiaxsbFKSkpUVFQuLi6zs7NKSkoGBga5ublvb289PT1Z
        WVkvLy+9vb1OTk5HR0daWlpWVlYfHx8AAAAAAAAlJSVbW1tgYGBhYWFSUlI2NjZERERnZ2d2dnZMTEwx
        MTFmZmZ1dXU7OztEREQ9PT1lZWWMjIw1NTUjIyOnp6dHR0daWlpRUVFKSkqtra0rKysnJye4uLhhYWE7
        OztBQUG2trZMTEwfHx+enp6Ojo4/Pz9AQEBMTEzGxsZPT09HR0dVVVVbW1sjIyMAAAAAAAAnJydgYGBa
        WlpcXFw4ODhOTk55eXliYmI4ODhERERdXV04ODiIiIh8fHxdXV13d3ebm5tWVlZISEgkJCSrq6tISEhb
        W1tXV1dLS0uvr68sLCwnJye7u7uqqqp/f3+hoaGjo6NPT09FRUVNTU27u7uTk5N2dnawsLDNzc1QUFBN
        TU1ZWVlXV1ckJCQAAAAAAAAmJiZgYGBiYmJMTEw3Nzd8fHw+Pj41NTVaWlpiYmJlZWVHR0c+Pj5tbW2D
        g4N9fX1OTk45OTlnZ2clJSWMjIxERERWVlZZWVlCQkKPj48tLS0nJyeLi4ttbW2MjIyNjY1UVFRVVVVo
        aGg3NzdWVlaXl5ecnJx3d3fExMRRUVFMTExgYGBaWlohISEAAAAAAAAkJCRdXV1iYmJRUVE3Nzd/f38m
        JiZKSkpISEhOTk5gYGBmZmZdXV0+Pj4qKio1NTVQUFBlZWVubm5DQ0MwMDBFRUVqamphYWE7OzszMzNJ
        SUk+Pj44ODhISEgxMTE2NjZUVFRkZGRpaWlkZGRFRUUuLi4uLi4yMjLExMRRUVFKSkpeXl5gYGAlJSUA
        AAAAAAAnJydgYGBeXl5ZWVk6OjpycnJfX19OTk5UVFRJSUlUVFRmZmZnZ2dtbW1qamppaWlvb29tbW1p
        aWlxcXFwcHBra2twcHBwcHBra2tubm5xcXFra2tra2tvb29ra2toaGhubm5qamplZWVra2toaGhiYmJn
        Z2czMzPFxcVRUVFSUlJeXl5dXV0mJiYAAAAAAAAoKChkZGRiYmJdXV1KSko9PT1vb2+FhYWHh4dVVVVO
        Tk5ra2toaGhpaWlubm5ra2tqampwcHBvb29paWlycnJxcXFqampycnJxcXFra2twcHBxcXFsbGxsbGxw
        cHBsbGxpaWlubm5ra2tkZGRsbGxqampgYGAzMzPExMRRUVFTU1NkZGReXl4jIyMAAAAAAAAlJSVgYGBk
        ZGRkZGRhYWFXV1czMzMbGxshISFBQUFeXl5qampsbGxoaGhra2tvb29sbGxra2twcHBwcHBsbGxycnJ0
        dHRra2tycnJzc3NsbGxxcXFzc3NtbW1vb29xcXFsbGxqampvb29sbGxnZ2dsbGxsbGw4ODgbGxsrKytX
        V1dkZGRmZmYnJycAAAAAAAAYGBg3Nzc7Ozs8PDw6Ojo6Ojo+Pj49PT07Ozs/Pz8/Pz87OztBQUFBQUE8
        PDxCQkJCQkI+Pj5CQkJDQ0NBQUFCQkJFRUVERERBQUFFRUVFRUU/Pz9EREREREQ+Pj5DQ0NDQ0M+Pj5B
        QUFCQkI+Pj4+Pj5BQUE+Pj47Ozs/Pz8+Pj43Nzc9PT0XFxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAAB
        AAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAABAAAB
        AAABAAABAAABAAABAAABAAAAAAAAAAAAAAAAAAAFBSpLFS91Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1
        Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1
        Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1GglvGQk2DAUCAQAAAAAAAAAAAAAFBSpLFS91
        Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1
        Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1Ggl1GglsGAk8
        DgYCAQAAAAAAAAAAAAAAAAACAhAeCBMuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQu
        CgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQuCgQu
        CgQuCgQuCgQuCgQuCgQuCgQuCgQmCAMIAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAIAAAAAADwAAgAAAAAAPAACAAAAAAAcAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAP///////wAAwAAAAAAHAACAAAAAAAMAAIAA
        AAAABwAAgAAAAAAPAAD///////8AAA==
</value>
  </data>
</root>