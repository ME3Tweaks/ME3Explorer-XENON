<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>126, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMCgAAAEAGADoFwAAFgAAACgAAAAwAAAAUAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAgIAAAAFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQYGBgYGBgYDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUPDw8WFhcXFxgXFxgYGBkYGBkYGBoZ
        GRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoZ
        GRoZGRoZGRoZGRoZGRoZGRoZGRoZGRoaGhsbGxwcHB0eHh8VFRYICAgAAAAAAAAAAAAAAAAAAAAFBQUR
        ERIWFhcWFhcYGBkYGBoZGRoaGhsaGhsaGhsaGhsaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwa
        GhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwaGhwbGxwcHB0cHB0dHR8fHyEi
        IiQbGx0ICAkAAAAAAAAAAAACAgIODg8WFhcWFhcXFxgZGRoaGhsbGxwcHB0dHR4dHR4dHR4dHR4dHR4d
        HR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4dHR4d
        HR4dHR4dHR4eHh8eHh8fHyAgICEiIiMkJCYmJigaGhsAAAAAAAAAAAAKCgoWFhcWFhcXFxgZGRobGxwc
        HB4dHBwlIB4WExIbGhwdHB0hHR0cGhseHR8fHh8dGhkcGxwcHB4fHiAiHh0fGhkUEhMfHyEeGxsZFRQT
        EBAfHyEcGxwZFRQeHR4UExkKCiUKCSYKCiIKCSIKChYKChULCxshISMiIiQkJCYmJigoKCoqKiwTExQB
        AQECAgIQEBAWFhcXFxgZGRobGx0dHR8fHyEsJyZpXlkpJSQdHR0tKilUS0YoJiQYFxgqJyhIPzo6NzQX
        FBMkIiNHPjlNR0IYFRQhICEzLCkuKCYRDw8gHyElIiNCOjclISELCyUAAF8AAFYAAFQAAFUAADQAADAC
        AjIkJCYlJScnJykpKSsrKy0tLS8iIiMFBQUAAAAVFRYYGBkZGRobGxwdHR8fHyEiIiMbGhkzMS8cGRki
        HBsdGhkxLSw1Ly0jHRodGhowLi43NTUXFBMlHhwtKCVAOTUnHxskHhwhHRwhHh0mHhslHhswKCU+ODUY
        FhQSEjQhIo8kJHsgIH0hIX8TE10BAUUDAzknJykoKCoqKiwsLC4uLjAwMDIvLzAICAkFBQUXFxgYGBka
        GhscHB4fHyEiIiMkJCY7Lip5X1MhGRaVdmlfSkFPPDV1Wk9ZRz+Ob2EsIh8qIByGZ1pcRjwtIx5GNzBF
        Ni9hTEKEZVgsIR0/MitENi9IODF/YlNoTz4XFkNIScVISLJBQadLS7JVVY0eHmQDA0ApKSsrKywtLS4v
        LzExMTMzMzQzMzUKCgoFBQUXFxkZGRobGxwdHR8gICIjIyUmJihLRD/KuKuynZFgVE2TgniGe3RhWFId
        GxqSf3WSfnSdh3y5npEaFhUtKSdXTUZfUkp9a2GhiHo1LSg/NzNiVExjVUydhXeHbloGBjAPD5I2NqJC
        Qq5GRq9sbLQnJ3cDA0EqKiwrKy0tLS8wMDIxMTM0NDY1NTcKCgoFBQUXFxgYGBkbGxwdHR8gICIjIyUm
        JidLSUf39fWyrqswLy9gXVzv8O+YlZMvLzA3NjWPjY2JiIg0MTEmJSZeWll9fHthYF9fXl1BQEAjIiF+
        enptbGphX19dXFsxMCwWFT08PbdGR7gwMZpKSrJlZrUiIm4CAkcrKy0sLC4uLjAxMTIzMzU1NTc2NjgL
        CwsFBQUXFxgZGRobGxwdHR8gICIjIyUlJSctKytxcG9DQUEnJyguLS9paWlNS0spKCosLC1YV1dcW1ss
        Ky0oKCpBQEBfXl9XVVZWVFREQkIkIyRSUlRbWVpVU1RWVVU2NDEdHDBFRH1DQXIsKko8O2Y0M10RET8J
        CSwqKisrKy0tLS8wMDIyMjQ0NDY1NTcLCwsEBAUWFhgYGBkbGxweHh8gICIiIiQlJSYkIyUkJCUlJScn
        JykmJigkJCUkJCUmJignJiglJCYkJCYmJignJykmJSclJCYmJSYmJCYlJCYlJSclJCYlJCYlJCYlJCYk
        JCYkJCckIywkIyskJCgkJCsjIykiIigjIycpKSsrKy0tLS8vLzExMTMzMzU1NTcLCwsEBAUWFhgYGBka
        GhsdHR4gICEiIiQkJCYlJScmJigmJigmJigmJigmJigmJigiIiQfHyEjIyUmJigmJigmJigmJigmJigm
        JigmJigmJigmJigmJigmJigmJigmJigmJigmJigmJigmJigmJigmJigmJignJyknJykpKSoqKiwsLC4u
        LjAwMDIyMjQ0NDYLCwwEBAUWFhcXFxgaGhscHB4fHyEhISMjIyUkJCYlJSclJSclJSclJSclJScjIyUe
        Hh8sLCwUFBYlJSclJSclJSclJSclJSclJSclJSclJSclJSclJSclJSclJSclJSclJSclJSclJSclJScl
        JSclJSclJScmJigmJigoKCkpKSorKywtLS8wMDIxMTMyMjQLCwsAAAAVFRYWFhcYGBobGxwdHR8fHyEi
        IiMjIyQjIyUjIyUjIyUjIyUjIyUcHB02NjZpaWkODg8jIyUjIyUjIyUjIyUjIyUjIyUjIyUjIyUjIyUj
        IyUjIyUjIyUjIyUjIyUjIyUjIyUjIyUjIyUjIyUjIyUkJCYkJCYmJicnJygpKSorKy0uLjAvLzEwMDIL
        CwwAAAAUFBUVFRYYGBkaGhwdHR4fHyAhISIiIiMeHiARERIICAkJCQoWFhgYGBo7OztqamoDAwMJCQoU
        FBUgICESEhMJCQoODg8JCQoWFhgUFBYKCgoODg4MDA0aGhwVFRYKCgoUFBYUFBYKCgoJCQoTExQVFRYK
        CgoXFxgmJicoKCkqKissLC4uLi8vLzAKCgsAAAAUFBUVFRYXFxgZGRscHB0eHh8gICEdHR4bGxtRUVFn
        Z2dpaWlEREQXFxg9PT2EhIRwcHB6enpNTU0dHR1iYmKAgIB1dXWNjY0zMzNbW1uMjIyJiYmKioooKChr
        a2uYmJhWVlZqamqZmZmTk5NSUlI2NjalpaUICAgkJCYnJygpKSorKy0sLC4tLS8LCwsAAAATExQUFBUW
        FhgYGBobGxwdHR4fHyAbGxw7OzxfX18dHR0uLi5paWkwMDA/Pz9+fn4nJygzMzSHh4c+Pj54eHgqKio0
        NDSYmJhPT0+AgIBVVVVNTU2SkpImJiaSkpJQUFBFRUWSkpIwMDAUFBQdHR1FRUasrKwHBwgjIyUlJScn
        JykpKSsrKywsLC0LCwsAAAASEhMTExQVFRYXFxgZGRsbGx0dHR4cHB1YWFg/Pz8YGBoeHh9nZ2c5OTlA
        QEB6enoKCgsWFhaHh4dXV1dsbGwYGBkGBgafn59DQ0NPT1CBgYF9fX2VlZUnJyeVlZVQUFBNTU2oqKh7
        e3t0dHRbW1tVVVWvr68TExMeHiAjIyUlJScnJykpKSoqKisKCgsAAAASEhITExMUFBYWFhcYGBoaGhwc
        HB0cHB1jY2M4ODgXFxkeHh9sbGw8PDxERESQkJA9PT1GRkaWlpY7OzuOjo44ODhLS0ujo6NBQUI0NDU4
        ODhzc3OKioocHByXl5dSUlJFRUWfn59OTk55eXmJiYlWVlaysrJzc3MxMTIdHR4kJCUmJicnJygoKCkK
        CgoDAwQRERISEhMUFBUVFRYXFxkZGRsbGxwdHR1paWk6OjoWFhgeHh9ycnI/Pz8tLS1/f392dnaCgoJJ
        SUkXFxhSUlKKiop7e3umpqZAQEFGRkeMjIyJiYk4ODhdXV23t7enp6ddXV1XV1eXl5eHh4c0NDQvLy+M
        jIyHh4dcXFwXFxcjIyQlJSYmJicnJygJCQoDAwMQEBERERITExQUFBYXFxgZGRoaGhwdHR5sbGw8PDwW
        FhcfHx91dXVBQUEODg4MDAwODg8MDA0TExQaGhsRERIMDAwDAwOnp6dDQ0MRERIMDAwMDAwSEhIJCQqH
        h4dJSUkPDw8RERIMDAwNDQ4XFxgWFhYMDAwPDxAQEBAcHBwhISIjIyQkJCUlJSYJCQoDAwMPDxAQEBES
        EhMTExQVFRYXFxgYGBobGxxnZ2c9PT0VFRYdHR5vb29BQUEVFRYaGhsaGhsaGhsaGhsaGhsaGhsaGhsG
        BgalpaU6OjsXFxgaGhsaGhsaGhsVFRYyMjIjIyQZGRoaGhsaGhsaGhsaGhsaGhsaGhsbGxwcHB0eHh8f
        HyAhISIiIiMjIyQICAgDAwMPDw8QEBARERISEhMUFBUWFhcXFxkWFhcYGBkREREWFhcXFxgZGRoSEhIW
        FhcZGRoZGRoZGRoZGRoZGRoZGRoZGRoLCwwhISIXFxgZGRoZGRoZGRoZGRoZGRoXFxgYGBkZGRoZGRoZ
        GRoZGRoZGRoZGRoZGRoaGhsaGhwcHB4eHh8gICEgICEhISIICAgDAwMODg8PDxAQEBISEhMTExQVFRYU
        FBUTExQWFhcYGBkYGBkXFxgUFBUTExQUFBUWFhcYGBkYGBkYGBkWFhcUFBUTExQTExQVFRYXFxgYGBkW
        FhcTExQTExQTExQUFBUWFhcXFxgUFBUVFRYVFRYUFBUXFxgYGBkYGBkWFhcXFxgcHB0eHiAfHyAgICEI
        CAgDAwMODg4PDw8QEBERERISEhQRERMaGhsjIyQMDA0XFxgUFBUVFRUrKysxMTEvLy8aGhsTExQXFxgS
        EhMjIyM1NTU6Ojo5OTknJycTExQXFxgKCgs8PDw/Pz9AQEA7OzscHBweHh4/Pz8SEhMTExQ7OzwcHBwW
        FhcZGRk4ODg4ODgcHB0dHR4eHh8fHyAHBwgDAwMNDQ0ODg4PDxAQEBERERINDQ4zMzNWVlYICAkVFRYN
        DQ5MTExdXV1OTk5cXFxWVlYeHh8PDxAmJiZubm5tbW1eXl5bW1tCQkIQEBEVFRYFBQaTk5N3d3dlZWV+
        fn5paWlDQ0OWlpYiIiImJiaRkZEtLS0TExQtLS2fn5+FhYUgICAbGxwcHB0dHR4GBgYCAgMMDA0NDQ4O
        Dg8PDxARERINDQ41NTZbW1sICAkQEBEzMzNqamoiIiMVFRYYGBlpaWlISEgLCwtoaGhkZGQbGxsYGBgY
        GBkYGBkUFBUVFRYFBQWVlZVGRkYYGBgbGxugoKBmZmaZmZkjIyMnJyeXl5cwMDAMDAx5eXm1tbWIiIgg
        ICEaGhsbGxwcHB0GBgYCAgILCwwNDQ0ODg4PDxAQEBENDQ05OTlgYGAICAgKCgpbW1tSUlIMDA0UFBUS
        EhM6Ojp0dHRLS0uIiIgjIyMSEhMUFBUUFBUUFBUUFBUUFBUFBQWenp5VVVUxMTF0dHSIiIhKSkqcnJwj
        IyMnJyeZmZkvLzA8PDypqamHh4eNjY0gICEaGhsbGxwcHBwGBgYCAgILCwwMDA0NDQ4ODg8QEBENDQ07
        OztkZGQICAgICAhra2tJSUkNDQ0TExQTExQfHx+AgIBeXl6SkpIAAAATExQTExQTExQTExQTExQTExQF
        BQWsrKyUlJSRkZGsrKxJSUkzMzOenp4kJCQoKCicnJxCQkOUlJRsbGxRUVGPj48gICEZGRoaGhsbGxwG
        BgYCAgILCwsMDAwNDQ4ODg4PDxAMDA08PD1nZ2cICAgJCQlmZmZXV1cMDAwTExQRERI4ODh/f39QUFCT
        k5MkJCURERITExQTExQTExQTExQTExQFBQWmpqZUVFQrKyuFhYV2dnYyMjKhoaElJSUoKCigoKCIiIik
        pKQcHBxSUlKRkZEgICEZGRoaGhsbGxwFBQUCAgILCwsMDAwNDQ0ODg4ODg4LCwtAQEBra2sGBgYLCwxM
        TEx3d3cXFxcODg8LCwxxcXFqamoWFhaBgYFnZ2cLCwsPDxAPDxAQEBATExQTExQFBQWnp6dGRkcKCgto
        aGiUlJQwMDCjo6MlJSUpKSm1tbWysrJNTU0LCwtTU1OSkpIhISEZGRobGxwbGxwFBQUCAgILCwsMDAwN
        DQ0ODg4qKipGRkZiYmKBgYFMTExGRkYRERFtbW12dnZYWFhtbW2FhYUxMTEMDA0pKSqQkJCAgIBkZGRf
        X19PT08PDw8TExQGBgatra1+fn5xcXGioqJiYmI0NDSlpaUmJiYpKSnExMSBgYEbGxsRERFUVFSSkpIh
        ISIaGhsbGxwbGxwFBQUCAgILCwwLCwwMDA0RERE4ODhSUlJTU1NWVlZYWFhVVVUVFRUcHB1NTU1gYGBZ
        WVktLS0PDxATExQODg8qKitcXFxqamppaWlDQ0MODg8TExQJCQlnZ2dvb29ubm5YWFgUFBQlJSZkZGQZ
        GRkbGxtxcXEtLS4SEhMRERI0NDRWVlYdHR0bGxwbGxwcHB0FBQUCAgIKCgsLCwwMDA0NDQ0KCgsKCgoK
        CgsLCwsLCwwNDQ0PDw8RERIODg8MDAwNDQ4RERITExQTExQTExQQEBENDQ4MDAwMDA0PDxASEhMTExQQ
        EBENDQ0MDAwMDA0ODg8RERIRERINDQ0ODg4ODg8NDQ0QEBAUFBUVFRYRERERERIZGRobGxwcHBwYGBkA
        AAAAAAAFBQYMDAwMDA0NDQ4ODg8QEBERERISEhISEhMTExQTExQTExQTExQUFBUUFBUUFBUUFBUUFBUU
        FBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUVFRYV
        FRYXFxcXFxgZGRobGxwbGxwcHB0NDQ4BAQEAAAACAgIKCgoMDA0NDQ4ODg8QEBERERISEhISEhMTExQT
        ExQUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUU
        FBUUFBUUFBUUFBUUFBUUFBUUFBUVFRYWFhcXFxcXFxgZGRobGxwbGxwVFRUFBQUAAAAAAAAAAAAAAAAM
        DAwNDQ4ODg8QEBERERISEhISEhMTExQUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUU
        FBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUVFRYWFhcXFxcXFxgZGRoa
        GhsYGBgJCQkAAAAAAAAAAAAAAAAAAAAAAAALCwsPDxARERERERISEhMSEhMTExQUFBUUFBUUFBUUFBUU
        FBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUUFBUU
        FBUUFBUUFBUVFRYWFhcXFxcXFxgZGRkUFBQHBwgAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIDAwMDAwMD
        AwMDAwQDAwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAUFBQUDAwMAAAAAAAAAAAAA
        AAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAA
        AACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAACAA
        AAAAAAAAEAAAAAAAAAAAP////4AAAA==
</value>
  </data>
</root>